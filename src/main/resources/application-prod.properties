spring.application.name=${APPLICATION_NAME}
## Database
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}}/${DATABASE}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=create
spring.batch.jdbc.initialize-schema=always
## User data API configs
userdata.reader.chunk.size=${API_READER_CHUNK_SIZE}
userdata.reader.start.page=${API_READER_START_PAGE}
userdata.reader.end.page=${API_READER_END_PAGE}
userdata.reader.page.size=${API_READER_PAGE_SIZE}
userdata.reader.resource.url=${API_READER_URL}
## User transaction from CSV configs
transaction.reader.chunk.size=${TRANSACTIONS_READER_CHUNK_SIZE}
transaction.reader.resource.path=${TRANSACTIONS_READER_RESOURCE_PATH}
transaction.reader.resource.headers=${TRANSACTION_READER_CSV_HEADERS}
## Kafka Configs
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.client-id=${KAFKA_CLIENT_ID}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.template.default-topic=${KAFKA_WINNER_TOPIC}
spring.kafka.winner.topic.partitions=${KAFKA_WINNER_TOPIC_PARTITIONS}
spring.kafka.winner.topic.replications=${KAFKA_WINNER_TOPIC_REPLICATIONS}
spring.batch.job.enabled=false

